name: "godot-ci export"
on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: ENV-DragonJump
  PROJECT_PATH: .
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions: write-all

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows" ./build/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows
          path: build/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux" ./build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux
          path: build/linux

  export-mac:
    name: Mac Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "macOS" ./build/mac/$EXPORT_NAME.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mac
          path: build/mac

  # export-web:
  #   name: Web Export
  #   runs-on: ubuntu-20.04
  #   container:
  #     image: barichello/godot-ci:4.3
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #     - name: Web Build
  #       run: |
  #         mkdir -v -p build/web
  #         cd $PROJECT_PATH
  #         godot --headless --verbose --export-release "HTML5" ./build/web/index.html
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: web
  #         path: build/web
  #     - name: Install rsync ðŸ“š
  #       run: |
  #         apt-get update && apt-get install -y rsync
  #     - name: Deploy to GitHub Pages ðŸš€
  #       uses: JamesIves/github-pages-deploy-action@releases/v4
  #       with:
  #         branch: gh-pages # The branch the action should deploy to.
  #         folder: build/web # The folder the action should deploy.

  release:
    name: Release
    needs: [export-windows, export-linux, export-mac]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download windows artifact from previous workflow
        uses: actions/download-artifact@v3
        with:
          name: windows
          path: ./build/windows
        
      - name: Download linux artifact from previous workflow
        uses: actions/download-artifact@v3
        with:
          name: linux
          path: ./build/linux
      
      - name: Download mac artifact from previous workflow
        uses: actions/download-artifact@v3
        with:
          name: mac
          path: ./build/mac

      - name: Zip builds
        run: |
          zip -r windows.zip ./build/windows
          zip -r linux.zip ./build/linux
          zip -r mac.zip ./build/mac

      - name: List downloaded files
        run: |
          ls -la ./build/windows
          ls -la ./build/linux
          ls -la ./build/mac
          ls -la ./

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload windows release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows.zip
          asset_name: windows.zip
          asset_content_type: application/zip 

      - name: Upload linux release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux.zip
          asset_name: linux.zip
          asset_content_type: application/zip 

      - name: Upload mac release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mac.zip
          asset_name: mac.zip
          asset_content_type: application/zip 